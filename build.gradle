plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.12.RELEASE'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

group 'ru.skillbox'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.4'
    implementation 'org.projectlombok:lombok:1.18.16'
    implementation 'org.liquibase:liquibase-core:4.4.1'
    implementation 'org.yaml:snakeyaml:1.29'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.zonky.test:embedded-database-spring-test:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    testImplementation 'com.opentable.components:otj-pg-embedded:0.13.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test:5.3.11.RELEASE'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport
tasks.named('sonarqube').configure {
    dependsOn test
}

test {
    useJUnitPlatform()

}
